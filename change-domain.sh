#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–º–µ–Ω—ã –¥–æ–º–µ–Ω–∞ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —É—Å—Ç–∞–Ω–æ–≤–∫–µ
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: sudo bash change-domain.sh old-domain.com new-domain.com

set -e

if [ -z "$1" ] || [ -z "$2" ]; then
    echo "‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 old-domain.com new-domain.com"
    echo "–ü—Ä–∏–º–µ—Ä: $0 video.full.com video.test.com"
    exit 1
fi

OLD_DOMAIN="$1"
NEW_DOMAIN="$2"
SOURCE_DOMAIN="video.full.icu"
NGINX_CONF_DIR="/etc/nginx"
SITES_AVAILABLE="$NGINX_CONF_DIR/sites-available"
SITES_ENABLED="$NGINX_CONF_DIR/sites-enabled"

echo "üîÑ –°–º–µ–Ω–∞ –¥–æ–º–µ–Ω–∞ —Å $OLD_DOMAIN –Ω–∞ $NEW_DOMAIN"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [[ $EUID -ne 0 ]]; then
   echo "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω –æ—Ç root" 
   exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞
if [ ! -f "$SITES_AVAILABLE/$OLD_DOMAIN.conf" ]; then
    echo "‚ùå –ö–æ–Ω—Ñ–∏–≥ –¥–ª—è $OLD_DOMAIN –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥–∏:"
    ls -la $SITES_AVAILABLE/*.conf 2>/dev/null || echo "–ù–µ—Ç –∫–æ–Ω—Ñ–∏–≥–æ–≤"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞..."
BACKUP_DIR="/root/domain-change-backup-$(date +%Y%m%d-%H%M%S)"
mkdir -p $BACKUP_DIR
cp -r $NGINX_CONF_DIR/* $BACKUP_DIR/
cp /root/manage-$OLD_DOMAIN.sh $BACKUP_DIR/ 2>/dev/null || true
cp /root/activate-ssl-$OLD_DOMAIN.sh $BACKUP_DIR/ 2>/dev/null || true
echo "–ë—ç–∫–∞–ø —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: $BACKUP_DIR"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞
echo "‚èπÔ∏è  –û—Ç–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞..."
rm -f $SITES_ENABLED/$OLD_DOMAIN.conf
rm -f $SITES_ENABLED/$OLD_DOMAIN-temp.conf

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞ –Ω–∞ –±–∞–∑–µ —Å—Ç–∞—Ä–æ–≥–æ
echo "üìÑ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥–∞ –¥–ª—è $NEW_DOMAIN..."
sed "s/$OLD_DOMAIN/$NEW_DOMAIN/g" $SITES_AVAILABLE/$OLD_DOMAIN.conf > $SITES_AVAILABLE/$NEW_DOMAIN.conf

# –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –¥–æ–º–µ–Ω–∞
cat > $SITES_AVAILABLE/$NEW_DOMAIN-temp.conf << EOF
server {
    listen 80;
    listen [::]:80;
    server_name $NEW_DOMAIN;
    
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }
    
    location /health {
        access_log off;
        return 200 "healthy\\n";
        add_header Content-Type text/plain;
    }
    
    location / {
        return 200 "Server ready for SSL setup for $NEW_DOMAIN";
        add_header Content-Type text/plain;
    }
}
EOF

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞
echo "üîß –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞ –¥–ª—è $NEW_DOMAIN..."
ln -sf $SITES_AVAILABLE/$NEW_DOMAIN-temp.conf $SITES_ENABLED/
nginx -t && systemctl reload nginx

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ SSL —Å–∫—Ä–∏–ø—Ç–∞
echo "üîë –°–æ–∑–¥–∞–Ω–∏–µ SSL —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è $NEW_DOMAIN..."
cat > /root/activate-ssl-$NEW_DOMAIN.sh << EOF
#!/bin/bash

DOMAIN="$NEW_DOMAIN"
EMAIL="admin@$NEW_DOMAIN"

echo "üîí –ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –¥–ª—è \$DOMAIN..."

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
certbot certonly --webroot -w /var/www/html -d \$DOMAIN --agree-tos --no-eff-email --email \$EMAIL --non-interactive

if [ \$? -eq 0 ]; then
    echo "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    
    # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞ —Å SSL
    echo "üîÑ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞..."
    rm -f /etc/nginx/sites-enabled/\$DOMAIN-temp.conf
    ln -sf /etc/nginx/sites-available/\$DOMAIN.conf /etc/nginx/sites-enabled/
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞
    nginx -t && systemctl reload nginx
    
    if [ \$? -eq 0 ]; then
        echo "üéâ SSL –∫–æ–Ω—Ñ–∏–≥ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ!"
        
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ crontab (—É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π)
        crontab -l | grep -v "certbot renew.*$OLD_DOMAIN" | crontab -
        (crontab -l 2>/dev/null; echo "0 12 * * * /usr/bin/certbot renew --quiet --post-hook 'systemctl reload nginx'") | crontab -
        echo "‚úÖ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
        
        # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
        curl -I http://localhost/health
        echo "‚úÖ –ü—Ä–æ–∫—Å–∏ –≥–æ—Ç–æ–≤: https://\$DOMAIN/videos/your-video-id.mp4"
        
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ SSL –∫–æ–Ω—Ñ–∏–≥–∞"
        exit 1
    fi
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
    exit 1
fi
EOF

chmod +x /root/activate-ssl-$NEW_DOMAIN.sh

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
echo "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è $NEW_DOMAIN..."
cat > /root/manage-$NEW_DOMAIN.sh << EOF
#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è video proxy –¥–ª—è $NEW_DOMAIN

DOMAIN="$NEW_DOMAIN"
SOURCE_DOMAIN="$SOURCE_DOMAIN"

show_status() {
    echo "=== –°—Ç–∞—Ç—É—Å Video Proxy –¥–ª—è \$DOMAIN ==="
    systemctl status nginx --no-pager -l
    
    echo -e "\\n=== –†–∞–∑–º–µ—Ä –∫—ç—à–∞ ==="
    du -sh /var/cache/nginx/video/ 2>/dev/null || echo "–ö—ç—à –ø—É—Å—Ç"
    
    echo -e "\\n=== –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è ==="
    netstat -an | grep :443 | wc -l
    
    echo -e "\\n=== –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ ==="
    tail -5 /var/log/nginx/error.log 2>/dev/null || echo "–ù–µ—Ç –æ—à–∏–±–æ–∫"
    
    echo -e "\\n=== SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç ==="
    if [ -f /etc/letsencrypt/live/\$DOMAIN/fullchain.pem ]; then
        openssl x509 -in /etc/letsencrypt/live/\$DOMAIN/fullchain.pem -noout -dates
    else
        echo "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    echo -e "\\n=== –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ==="
    echo "–î–æ–º–µ–Ω: \$DOMAIN"
    echo "–ò—Å—Ç–æ—á–Ω–∏–∫: \$SOURCE_DOMAIN"
    echo "–ü—Ä–æ–∫—Å–∏ URL: https://\$DOMAIN/videos/{video-id}.mp4"
}

clear_cache() {
    echo "üóëÔ∏è –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞..."
    rm -rf /var/cache/nginx/video/*
    systemctl reload nginx
    echo "‚úÖ –ö—ç—à –æ—á–∏—â–µ–Ω"
}

show_logs() {
    echo "üìã –õ–æ–≥–∏ –¥–ª—è \$DOMAIN:"
    echo "=== Access Log ==="
    tail -50 /var/log/nginx/\$DOMAIN.access.log 2>/dev/null || echo "–õ–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    
    echo -e "\\n=== Error Log ==="
    tail -50 /var/log/nginx/\$DOMAIN.error.log 2>/dev/null || echo "–õ–æ–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω"
}

test_proxy() {
    echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Å–∏ –¥–ª—è \$DOMAIN..."
    
    echo "–¢–µ—Å—Ç health endpoint:"
    curl -s -o /dev/null -w "HTTP: %{http_code} | Time: %{time_total}s\\n" http://localhost/health
    
    echo "–¢–µ—Å—Ç HTTPS:"
    curl -s -o /dev/null -w "HTTP: %{http_code} | Time: %{time_total}s\\n" https://\$DOMAIN/health 2>/dev/null || echo "HTTPS –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (SSL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω?)"
    
    echo "–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞:"
    curl -s -o /dev/null -w "HTTP: %{http_code} | Time: %{time_total}s\\n" https://\$SOURCE_DOMAIN/videos/ 2>/dev/null || echo "–ò—Å—Ç–æ—á–Ω–∏–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
}

case "\$1" in
    status)
        show_status
        ;;
    logs)
        show_logs
        ;;
    clear-cache)
        clear_cache
        ;;
    test)
        test_proxy
        ;;
    restart)
        echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Nginx..."
        systemctl restart nginx
        echo "‚úÖ Nginx –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
        ;;
    reload)
        echo "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
        nginx -t && systemctl reload nginx
        echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞"
        ;;
    ssl)
        bash /root/activate-ssl-\$DOMAIN.sh
        ;;
    *)
        echo "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Video Proxy –¥–ª—è \$DOMAIN"
        echo "–ò—Å—Ç–æ—á–Ω–∏–∫: \$SOURCE_DOMAIN"
        echo ""
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: \$0 {status|logs|clear-cache|test|restart|reload|ssl}"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  status      - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"
        echo "  logs        - –ø–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
        echo "  clear-cache - –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à"
        echo "  test        - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–∫—Å–∏"
        echo "  restart     - –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å nginx"
        echo "  reload      - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
        echo "  ssl         - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
        echo ""
        echo "–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSL –ø—Ä–æ–∫—Å–∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω:"
        echo "https://\$DOMAIN/videos/{video-id}.mp4"
        exit 1
        ;;
esac
EOF

chmod +x /root/manage-$NEW_DOMAIN.sh

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
echo "üìÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã..."
cat > /var/www/html/status.html << EOF
<!DOCTYPE html>
<html>
<head>
    <title>Video Proxy Status - $NEW_DOMAIN</title>
    <meta http-equiv="refresh" content="30">
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; }
        .status { padding: 10px; margin: 10px 0; border-radius: 5px; }
        .ok { background-color: #d4edda; color: #155724; }
        .error { background-color: #f8d7da; color: #721c24; }
        .info { background-color: #d1ecf1; color: #0c5460; }
        .changed { background-color: #fff3cd; color: #856404; }
    </style>
</head>
<body>
    <h1>Video Proxy Status</h1>
    <div class="status changed">
        <strong>‚ö†Ô∏è Domain Changed:</strong> $OLD_DOMAIN ‚Üí $NEW_DOMAIN
    </div>
    <div class="status info">
        <strong>New Domain:</strong> $NEW_DOMAIN<br>
        <strong>Source:</strong> $SOURCE_DOMAIN<br>
        <strong>Proxy URL:</strong> https://$NEW_DOMAIN/videos/{video-id}.mp4<br>
        <strong>Last Update:</strong> <span id="time"></span>
    </div>
    
    <script>
        document.getElementById('time').innerText = new Date().toLocaleString();
        
        fetch('/health')
            .then(response => response.text())
            .then(data => {
                console.log('Health check:', data);
            })
            .catch(error => {
                console.error('Health check failed:', error);
            });
    </script>
</body>
</html>
EOF

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º)
echo ""
echo "üóëÔ∏è –•–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è $OLD_DOMAIN? (y/N)"
read -r response
if [[ "$response" =~ ^([yY][eE][sS]|[yY])$ ]]; then
    echo "–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    rm -f /root/manage-$OLD_DOMAIN.sh
    rm -f /root/activate-ssl-$OLD_DOMAIN.sh
    rm -f $SITES_AVAILABLE/$OLD_DOMAIN.conf
    rm -f $SITES_AVAILABLE/$OLD_DOMAIN-temp.conf
    echo "‚úÖ –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"
else
    echo "‚ÑπÔ∏è –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±—ç–∫–∞–ø–µ: $BACKUP_DIR"
fi

echo ""
echo "‚úÖ –°–º–µ–Ω–∞ –¥–æ–º–µ–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:"
echo "1. ‚úÖ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø —Å—Ç–∞—Ä–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
echo "2. ‚úÖ –û—Ç–∫–ª—é—á–µ–Ω —Å—Ç–∞—Ä—ã–π –¥–æ–º–µ–Ω: $OLD_DOMAIN"
echo "3. ‚úÖ –°–æ–∑–¥–∞–Ω –∫–æ–Ω—Ñ–∏–≥ –¥–ª—è –Ω–æ–≤–æ–≥–æ –¥–æ–º–µ–Ω–∞: $NEW_DOMAIN"
echo "4. ‚úÖ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥ (–±–µ–∑ SSL)"
echo "5. ‚úÖ –°–æ–∑–¥–∞–Ω—ã –Ω–æ–≤—ã–µ —Å–∫—Ä–∏–ø—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
echo "6. ‚úÖ Nginx –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω"
echo ""
echo "üî• –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:"
echo "1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å DNS –¥–ª—è $NEW_DOMAIN –Ω–∞ –≤–∞—à —Å–µ—Ä–≤–µ—Ä"
echo "2. –ü–æ–ª—É—á–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç:"
echo "   bash /root/activate-ssl-$NEW_DOMAIN.sh"
echo ""
echo "üìÅ –ù–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: bash /root/manage-$NEW_DOMAIN.sh"
echo "- SSL: bash /root/activate-ssl-$NEW_DOMAIN.sh"
echo "- –°—Ç–∞—Ç—É—Å: http://your-server-ip/status.html"
echo ""
echo "‚ö†Ô∏è –í–ê–ñ–ù–û:"
echo "- –°—Ç–∞—Ä—ã–π –¥–æ–º–µ–Ω $OLD_DOMAIN –±–æ–ª—å—à–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
echo "- –ù–æ–≤—ã–π –ø—Ä–æ–∫—Å–∏ –±—É–¥–µ—Ç: https://$NEW_DOMAIN/videos/your-video-id.mp4"
echo "- –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Å—ã–ª–∫–∏ –≤ –≤–∞—à–µ–º JS –ø–ª–µ–µ—Ä–µ!"
echo ""
echo "üîÑ –ü—Ä–æ–∫—Å–∏—Ä—É–µ—Ç —Å: https://$SOURCE_DOMAIN/videos/"